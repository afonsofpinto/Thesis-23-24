{
  "version": 4,
  "terraform_version": "1.4.6",
  "serial": 713,
  "lineage": "ec21019d-ac41-2c69-5309-6a259aab1de6",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "template_file",
      "name": "config_script",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "39ff69c4d829cb11d7a9343606130b97a3ab3093047b603b9b2582216ab8b067",
            "rendered": "#!/bin/bash\ncd\n# will later be used to get the id of the current instance\nidBroker=$(cat id.txt)\n\n\n# --------- Zookeeper ---------\n# get and setup files\nsudo wget https://dlcdn.apache.org/zookeeper/zookeeper-3.8.4/apache-zookeeper-3.8.4-bin.tar.gz\nsudo tar -zxf apache-zookeeper-3.8.4-bin.tar.gz\nsudo mv apache-zookeeper-3.8.4-bin /usr/local/zookeeper\nsudo mkdir -p /var/lib/zookeeper\n\n# create config file\necho \"tickTime=2000\ndataDir=/var/lib/zookeeper\nclientPort=2181\nmaxClientCnxns=60\ninitLimit=10\nsyncLimit=5\nservers\" \u003e /usr/local/zookeeper/conf/zoo.cfg  # servers will later be replaced\n\n# set zookeeper servers\nstring_with_new_lines=$(echo server.1=ec2-3-81-139-33.compute-1.amazonaws.com:2888:3888 | sed 's|,|\\\\n|g') # replace commas with \\n\nsed -i \"s/servers/$string_with_new_lines/g\" \"/usr/local/zookeeper/conf/zoo.cfg\" # replace servers with multiline servers' hostnames\n\nsudo yum -y install java-1.8.0-openjdk.x86_64 \nsudo bash -c \"echo $idBroker \u003e /var/lib/zookeeper/myid\"\n\n# ---------- kafka ----------\n# get and setup files\nsudo wget https://archive.apache.org/dist/kafka/3.3.2/kafka_2.13-3.3.2.tgz\nsudo tar -zxf kafka_2.13-3.3.2.tgz\nsudo mv kafka_2.13-3.3.2 /usr/local/kafka\nsudo mkdir /tmp/kafka-logs\nip=`curl http://169.254.169.254/latest/meta-data/public-hostname`\n\n# set properties file\nsudo sed -i \"s/#listeners=PLAINTEXT:\\/\\/:9092/listeners=PLAINTEXT:\\/\\/$ip:9092/g\" /usr/local/kafka/config/server.properties\nsudo sed -i \"s/broker.id=0/broker.id=$idBroker/g\" /usr/local/kafka/config/server.properties\nsudo sed -i \"s/offsets.topic.replication.factor=1/offsets.topic.replication.factor=1/g\" /usr/local/kafka/config/server.properties\nsudo sed -i \"s/transaction.state.log.replication.factor=1/transaction.state.log.replication.factor=1/g\" /usr/local/kafka/config/server.properties\nsudo sed -i \"s/transaction.state.log.min.isr=1/transaction.state.log.min.isr=1/g\" /usr/local/kafka/config/server.properties\n# set zookeeper servers in kafka\nsudo sed -i \"s/zookeeper.connect=localhost:2181/zookeeper.connect=ec2-3-81-139-33.compute-1.amazonaws.com:2181/g\" /usr/local/kafka/config/server.properties\n\n# ---------- reboot \u0026 startup ----------\n# start zookeeper on boot\nsudo bash -c 'echo \"sudo /usr/local/zookeeper/bin/zkServer.sh start\" \u003e\u003e /etc/rc.local'\n# start kafka on boot\nsudo bash -c 'echo \"sleep 30\" \u003e\u003e /etc/rc.local'\nsudo bash -c 'echo \"(sudo /usr/local/kafka/bin/kafka-server-start.sh -daemon /usr/local/kafka/config/server.properties) \u0026\" \u003e\u003e /etc/rc.local'\n# set necessary kafka topics on boot (only one process does this)\n#if [ $idBroker -eq 1 ]; then\nsudo bash -c 'echo \"sudo /usr/local/kafka/bin/kafka-topics.sh --create --bootstrap-server ec2-3-81-139-33.compute-1.amazonaws.com:9092 -replication-factor 1 --partitions 2 --topic transactions\" \u003e\u003e /etc/rc.local'\n#sudo bash -c 'echo \"sudo /usr/local/kafka/bin/kafka-topics.sh --create --bootstrap-server ec2-3-81-139-33.compute-1.amazonaws.com:9092 -replication-factor 1 --partitions 2 --topic apilot-txns\" \u003e\u003e /etc/rc.local'\n#sudo bash -c 'echo \"sudo /usr/local/kafka/bin/kafka-topics.sh --create --bootstrap-server ec2-3-81-139-33.compute-1.amazonaws.com:9092 -replication-factor 1 --partitions 2 --topic av-events\" \u003e\u003e /etc/rc.local'\n#fi\nsudo chmod +x /etc/rc.local   # make it executable\nsudo systemctl enable rc-local.service\nsudo systemctl start  rc-local.service\nrm id.txt # delete tmp file for the id",
            "template": "#!/bin/bash\ncd\n# will later be used to get the id of the current instance\nidBroker=$(cat id.txt)\n\n\n# --------- Zookeeper ---------\n# get and setup files\nsudo wget https://dlcdn.apache.org/zookeeper/zookeeper-3.8.4/apache-zookeeper-3.8.4-bin.tar.gz\nsudo tar -zxf apache-zookeeper-3.8.4-bin.tar.gz\nsudo mv apache-zookeeper-3.8.4-bin /usr/local/zookeeper\nsudo mkdir -p /var/lib/zookeeper\n\n# create config file\necho \"tickTime=2000\ndataDir=/var/lib/zookeeper\nclientPort=2181\nmaxClientCnxns=60\ninitLimit=10\nsyncLimit=5\nservers\" \u003e /usr/local/zookeeper/conf/zoo.cfg  # servers will later be replaced\n\n# set zookeeper servers\nstring_with_new_lines=$(echo ${zookeeper_config} | sed 's|,|\\\\n|g') # replace commas with \\n\nsed -i \"s/servers/$string_with_new_lines/g\" \"/usr/local/zookeeper/conf/zoo.cfg\" # replace servers with multiline servers' hostnames\n\nsudo yum -y install java-1.8.0-openjdk.x86_64 \nsudo bash -c \"echo $idBroker \u003e /var/lib/zookeeper/myid\"\n\n# ---------- kafka ----------\n# get and setup files\nsudo wget https://archive.apache.org/dist/kafka/3.3.2/kafka_2.13-3.3.2.tgz\nsudo tar -zxf kafka_2.13-3.3.2.tgz\nsudo mv kafka_2.13-3.3.2 /usr/local/kafka\nsudo mkdir /tmp/kafka-logs\nip=`curl http://169.254.169.254/latest/meta-data/public-hostname`\n\n# set properties file\nsudo sed -i \"s/#listeners=PLAINTEXT:\\/\\/:9092/listeners=PLAINTEXT:\\/\\/$ip:9092/g\" /usr/local/kafka/config/server.properties\nsudo sed -i \"s/broker.id=0/broker.id=$idBroker/g\" /usr/local/kafka/config/server.properties\nsudo sed -i \"s/offsets.topic.replication.factor=1/offsets.topic.replication.factor=${totalBrokers}/g\" /usr/local/kafka/config/server.properties\nsudo sed -i \"s/transaction.state.log.replication.factor=1/transaction.state.log.replication.factor=${totalBrokers}/g\" /usr/local/kafka/config/server.properties\nsudo sed -i \"s/transaction.state.log.min.isr=1/transaction.state.log.min.isr=${totalBrokers}/g\" /usr/local/kafka/config/server.properties\n# set zookeeper servers in kafka\nsudo sed -i \"s/zookeeper.connect=localhost:2181/zookeeper.connect=${kafka_config}/g\" /usr/local/kafka/config/server.properties\n\n# ---------- reboot \u0026 startup ----------\n# start zookeeper on boot\nsudo bash -c 'echo \"sudo /usr/local/zookeeper/bin/zkServer.sh start\" \u003e\u003e /etc/rc.local'\n# start kafka on boot\nsudo bash -c 'echo \"sleep 30\" \u003e\u003e /etc/rc.local'\nsudo bash -c 'echo \"(sudo /usr/local/kafka/bin/kafka-server-start.sh -daemon /usr/local/kafka/config/server.properties) \u0026\" \u003e\u003e /etc/rc.local'\n# set necessary kafka topics on boot (only one process does this)\n#if [ $idBroker -eq 1 ]; then\nsudo bash -c 'echo \"sudo /usr/local/kafka/bin/kafka-topics.sh --create --bootstrap-server ${broker1}:9092 -replication-factor ${totalBrokers} --partitions ${totalBrokers*2} --topic transactions\" \u003e\u003e /etc/rc.local'\n#sudo bash -c 'echo \"sudo /usr/local/kafka/bin/kafka-topics.sh --create --bootstrap-server ${broker1}:9092 -replication-factor ${totalBrokers} --partitions ${totalBrokers*2} --topic apilot-txns\" \u003e\u003e /etc/rc.local'\n#sudo bash -c 'echo \"sudo /usr/local/kafka/bin/kafka-topics.sh --create --bootstrap-server ${broker1}:9092 -replication-factor ${totalBrokers} --partitions ${totalBrokers*2} --topic av-events\" \u003e\u003e /etc/rc.local'\n#fi\nsudo chmod +x /etc/rc.local   # make it executable\nsudo systemctl enable rc-local.service\nsudo systemctl start  rc-local.service\nrm id.txt # delete tmp file for the id",
            "vars": {
              "broker1": "ec2-3-81-139-33.compute-1.amazonaws.com",
              "kafka_config": "ec2-3-81-139-33.compute-1.amazonaws.com:2181",
              "totalBrokers": "1",
              "zookeeper_config": "server.1=ec2-3-81-139-33.compute-1.amazonaws.com:2888:3888"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "exampleCluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "ami": "ami-090e0fc566929d98b",
            "arn": "arn:aws:ec2:us-east-1:848638121349:instance/i-0da26a5614b787c61",
            "associate_public_ip_address": true,
            "availability_zone": "us-east-1d",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_core_count": 1,
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 1,
                "threads_per_core": 1
              }
            ],
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "",
            "id": "i-0da26a5614b787c61",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_state": "running",
            "instance_type": "t2.small",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "vockey",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": 0,
            "primary_network_interface_id": "eni-010f8cc15910ebdbb",
            "private_dns": "ip-172-31-41-181.ec2.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "172.31.41.181",
            "public_dns": "ec2-3-81-139-33.compute-1.amazonaws.com",
            "public_ip": "3.81.139.33",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-058b7160f199fc0f4",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [
              "kafka-group"
            ],
            "source_dest_check": true,
            "subnet_id": "subnet-082d4a43c534e5d46",
            "tags": {
              "Name": "kafka-0"
            },
            "tags_all": {
              "Name": "kafka-0"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": null,
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0b919c64592df8316"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_security_group.instance"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "instance",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:848638121349:security-group/sg-0b919c64592df8316",
            "description": "Managed by Terraform",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [
                  "::/0"
                ],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0b919c64592df8316",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 2181,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 2181
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 2888,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 2888
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 3888,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 3888
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 9092,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 9092
              }
            ],
            "name": "kafka-group",
            "name_prefix": "",
            "owner_id": "848638121349",
            "revoke_rules_on_delete": false,
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "vpc_id": "vpc-06be2b8fcb182a983"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "kafka_brokers",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "ec2-3-81-139-33.compute-1.amazonaws.com:9092",
            "content_base64": null,
            "content_base64sha256": "yQrWJP/UqcQQZLoRaQ2BLMTEf1Bgu98Dout8L3Kg10s=",
            "content_base64sha512": "qwRfCw8gKR3EAEXDyb6r1kAT6cjm0TpP87ZkwrFzp4uPWdnBAh+X5xoH20XpTLIpMcRMDk1mWXXP/jUIDHiy7A==",
            "content_md5": "c5146e8b612818c1f7428ae9d126cd31",
            "content_sha1": "92b07c83695c534bd5980634f31e786510e7deee",
            "content_sha256": "c90ad624ffd4a9c41064ba11690d812cc4c47f5060bbdf03a2eb7c2f72a0d74b",
            "content_sha512": "ab045f0b0f20291dc40045c3c9beabd64013e9c8e6d13a4ff3b664c2b173a78b8f59d9c1021f97e71a07db45e94cb22931c44c0e4d665975cffe35080c78b2ec",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./kafka_brokers.tmp",
            "id": "92b07c83695c534bd5980634f31e786510e7deee",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "aws_instance.exampleCluster",
            "aws_security_group.instance"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "kafka_hostnames",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "ec2-3-81-139-33.compute-1.amazonaws.com",
            "content_base64": null,
            "content_base64sha256": "FHzmkvKiLDgrtTkyzeBYnLC6qSMQxNzZy+NEc7W9nFw=",
            "content_base64sha512": "F3IhdA/1lXJ6En2/EZKIpLpJqm9+SPg0EwaEIDOPPCJndCf7lx4M1NAxlTp7jpnWsp9u62M4EuIMsVgTIkTZ/Q==",
            "content_md5": "ed3def598edf5d1d70c9508582442b59",
            "content_sha1": "9114555f8b855c3a286a5f25d8a1838f06a9be65",
            "content_sha256": "147ce692f2a22c382bb53932cde0589cb0baa92310c4dcd9cbe34473b5bd9c5c",
            "content_sha512": "177221740ff595727a127dbf119288a4ba49aa6f7e48f83413068420338f3c22677427fb971e0cd4d031953a7b8e99d6b29f6eeb633812e20cb158132244d9fd",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./kafka_hostnames.tmp",
            "id": "9114555f8b855c3a286a5f25d8a1838f06a9be65",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "aws_instance.exampleCluster",
            "aws_security_group.instance"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "updateConfigs",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1411607374",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.exampleCluster",
            "data.template_file.config_script"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
